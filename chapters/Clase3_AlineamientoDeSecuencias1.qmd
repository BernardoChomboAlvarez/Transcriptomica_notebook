---
title: "Alineamiento de secuencias I"
subtitle: "Licenciatura en Ciencias Genómicas, Transcriptómica, Semestre 2025-2"
description: "Clase 4 – Análisis bioinformático: alineamiento de secuencias con genomas anotados"
author:
- Bernardo Chombo Álvarez
- David Valle García
date: last-modified
format:
  html:
    self-contained: true
    toc: true
    toc-expand: true
    toc-depth: 4
    theme: flatly
    highlight-style: monokai
    code-fold: false
    code-overflow: scroll
    code-block-border-left: "#31BAE9"
    code-block-bg: "#011627"
    page-layout: article
    fig-align: center
    df-print: paged
    code-line-numbers: true
    code-copy: false
    css: ../css/styles.css
execute: 
  eval: true
  echo: true
  warning: false
  include: true
  error: false
  message: false
fontsize: 11pt
editor: visual
mainfont: Calibri
sansfont: Calibri
monofont: Calibri
knitr:
  opts_chunk:
    comment: "##"
  opts_knit:
    kable: true
---

## 1. Analizar y limpiar archivos .fastq con FASTQC

El software **FASTQC** sirve para analizar y limpiar archivos .fastq de acuerdo a su calidad. Se puede descargar directamente desde la página <https://www.bioinformatics.babraham.ac.uk/projects/fastqc/> o bien si eres usuario de Linux lo puedes hacer de la siguiente forma:

```{bash}
#| eval: false
## Direct installation
sudo apt -y install fastqc

## Conda installation
conda update conda
conda create --name fastqc_env
conda activate fastqc_env
conda install -c bioconda fastqc
```

Para entender qué es lo que **FASTQC** está haciendo, es necesario entender la sintaxis de los archivos .fastq

### 1.1 Nomenclatura

Los archivos se nombran con el nombre de la muestra y el número del nombre de la muestra (*int)* : `samplename_S1_L001_R1_001.fastq.gz`

donde:

-   *samplename*: nombre de la muestra

-   *S1*: índice de la muestra

-   *L001*: número del carril del secuenciador

-   *R1*: la lectura (*read*). Cuando son archivos paired-end debe de haber al menos un R1 y R2

-   *001*: EL último segmento siempre es 001

-   *.gz*: los archivos siempre se van a guardar en el formato GNU zip

### 1.2 Formato

Cada entrada en un archivo de FASTQ consiste en las siguientes 4 líneas:

1.  Identificador de la secuencia (empezando con \@)

2.  Secuencia

3.  Línea identificadora del score de calidad (+)

4.  Score de calidad. Estos están codificados en formato Phred +33, donde usan caracteres ASCII para representar los valores numéricos de los scores de calidad.

```{default}
@SIM:1:FCX:1:15:6329:1045 1:N:0:2
TCGCACTCAACGCCCTGCATATGACAAGACAGAATC
+
<>;##=><9=AAAAAAAAAA9#:<#<;<<<????#=
```

El *quality score* o score de calidad expresa la **probabilidad de un error*.*** Dada A, el *quality score* de A, Q(A), expresa la probabilidad de que A no sea cierta, P(\~A), de acuerdo a la siguiente relación:

$$
Q(A) = 10log10(P(~A))
$$

Si se calculan los *quality scores* podemos obtener la siguiente relación:

| Quality Score, Q(A) | Error probability, P(\~A) |
|---------------------|---------------------------|
| 10                  | 0.1                       |
| 20                  | 0.01                      |
| 30                  | 0.001                     |

**Quality Score encoding**

Para entender la 4ta línea es necesario conocer los valores ASCII y sus equivalencias

| Symbol | ASCII Code | Q-Score |
|:------:|:----------:|:-------:|
|   !    |     33     |    0    |
|   "    |     34     |    1    |
|   \#   |     35     |    2    |
|   \$   |     36     |    3    |
|   \%   |     37     |    4    |
|   &    |     38     |    5    |
|   '    |     39     |    6    |
|   (    |     40     |    7    |
|   )    |     41     |    8    |
|   \*   |     42     |    9    |
|   \+   |     43     |   10    |
|   ,    |     44     |   11    |
|   \-   |     45     |   12    |
|   .    |     46     |   13    |
|   /    |     47     |   14    |
|   0    |     48     |   15    |
|   1    |     49     |   16    |
|   2    |     50     |   17    |
|   3    |     51     |   18    |
|   4    |     52     |   19    |
|   5    |     53     |   20    |
|   6    |     54     |   21    |
|   7    |     55     |   22    |
|   8    |     56     |   23    |
|   9    |     57     |   24    |
|   :    |     58     |   25    |
|   ;    |     59     |   26    |
|   \<   |     60     |   27    |
|   =    |     61     |   28    |
|   \>   |     62     |   29    |
|   ?    |     63     |   30    |
|   \@   |     64     |   31    |
|   A    |     65     |   32    |
|   B    |     66     |   33    |
|   C    |     67     |   34    |
|   D    |     68     |   35    |
|   E    |     69     |   36    |
|   F    |     70     |   37    |
|   G    |     71     |   38    |
|   H    |     72     |   39    |
|   I    |     73     |   40    |

### 1.3 Propósito

El propósito general y más simplificado de FASTQC se puede resumir en los siguientes 4 puntos:

1.  Importar datos de archivos .fastq (aunque también puede aceptar archivos de alineamiento .bam y .sam)
2.  Rápida identificación de posibles problemas de la secuenciación
3.  Gráficos y tablas que resumen los datos de forma accesible
4.  Exportación de los resultados en formato HTML

En el caso de que se haga con *raw data*:

1.  Identificar errores de la secuenciación
2.  Identificar secuencias contaminantes sobre representadas
3.  Entendimiento de la complejidad de la librería (contaminación de rRNA, duplicaciones)
4.  Representación adecuada del organismo por el porcentaje de %GC reportado (si hay sobre representación de genes, puede no ser útil)

**Para más información relacionada con casos puntuales como los errores de secuenciación, consultar las referencias.**

<br>

## 2. Alineamiento con genomas anotados

<img src="../images/Class3_img1.png" alt="Description of image" width="700px"/>

Por lo general se emplean estos alineadores cuando se considera splicing.

### 2.1 STAR (Spliced Transcripts Alignment to a Reference)

Requiere del genoma de referencia en formato fasta y de un archivo de anotación .gtf.

[Manual STAR](https://physiology.med.cornell.edu/faculty/skrabanek/lab/angsd/lecture_notes/STARmanual.pdf)

#### 2.1.1 Construcción de un index

Argumentos básicos para la construcción de un index con **STAR**:

-   `--runThreadN`: number of cores
-   `--runMode`: genomeGenerate mode
-   `--genomeDir`: /path/to/store/genome_indices
-   `--genomeFastaFiles`: /path/to/FASTA_file
-   `--sjdbGTFfile`: /path/to/GTF_file
-   `--sjdbOverhang`: readlength -1

```{bash}
#| eval: false
## Create index wiht STAR
STAR --runThreadN 6 \
--runMode genomeGenerate \
--genomeDir chr1_hg38_index \
--genomeFastaFiles /n/groups/hbctraining/intro_rnaseq_hpc/reference_data_ensembl38/Homo_sapiens.GRCh38.dna.chromosome.1.fa \
--sjdbGTFfile /n/groups/hbctraining/intro_rnaseq_hpc/reference_data_ensembl38/Homo_sapiens.GRCh38.92.gtf \
--sjdbOverhang 99
```

#### 2.1.2 Alineamiento

Argumentos importantes para el alineamiento con **STAR**:

-   `--runThreadN`: number of cores
-   `--readFilesIn`: /path/to/FASTQ_file
-   `--genomeDir`: /path/to/genome_indices
-   `--outFileNamePrefix`: prefix for all output files
-   `--outSAMtype`: output filetype (SAM default)
-   `--outSAMunmapped`: what to do with unmapped reads
-   `--outFilterMultimapNmax`: maximum number of multiple alignments (default 10)

```{bash}
#| eval: false
## Run STAR
STAR --genomeDir /n/groups/hbctraining/intro_rnaseq_hpc/reference_data_ensembl38/ensembl38_STAR_index/ \
--runThreadN 6 \
--readFilesIn Mov10_oe_1.subset.fq \
--outFileNamePrefix ../results/STAR/Mov10_oe_1_ \
--outSAMtype BAM SortedByCoordinate \
--outSAMunmapped Within \
--outSAMattributes Standard 
```

<br>

### 2.2 hisat2

Un alineamiento con hisat2 requiere de un archivo .fasta y de un archivo .gtf o .gff3

[Manual hisat2](https://daehwankimlab.github.io/hisat2/manual/)

#### 2.2.1 Construcción de un index

Puede crear un index de genomas de cualquier tamaño.

```{bash}
#| eval: false
## Build index
hisat2-build [options]* <reference_in> <ht2_base>
```

#### 2.2.2 Alineamiento

Argumentos importantes para el alineamiento con **Bowtie2**:

-   `-q`: print the wall-clock time required to load the index files and align the reads.
-   `-5`: trim *n* bases from 5’ (left) end of each read before alignment.
-   `-3`: trim *n* bases from 3’ (right) end of each read before alignment.
-   `-p`: number of cores
-   `-k`: search for the *k* distinct primary alignments for each read.
-   `-t`: reads (<m1>,<m2>,<a>) are in FASTQ format
-   `-u`: align the first *u* reads or read pairs from the input
-   `--phred33`: input qualities are ASCII chars equal to the Phred quality plus 33
-   `--tmo`: report only those alignments within known transcripts
-   `--no-mixed`: y default, when hisat2 cannot find a concordant or discordant alignment for a pair, it then tries to find alignments for the individual mates. This option disables that behavior.
-   `--no-discordant`: by default, hisat2 looks for discordant alignments if it cannot find any concordant alignments. A discordant alignment is an alignment where both mates align uniquely, but that does not satisfy the paired-end constraints (--fr/--rf/--ff, -I, -X). This option disables that behavior.
-   `--rna-strandness`: specify stra-5nd-specific information: the default is unstranded. For single-end reads, use F or R.
-   `--no-unal`: suppress SAM records for reads that failed to align.
-   `--remove-chrname`: remove ‘chr’ from reference names in alignment
-   `--add-chrname`: add ‘chr’ to reference names in alignment
-   `-x`: the basename of the index for the reference genome.
-   `-1`: \<m1\>
-   `-2`: \<m2\>
-   `-U`: comma-separated list of files containing unpaired reads to be aligned
-   `-S`: /path/to/output/SAM_file

```{bash}
#| eval: false
## Build index
hisat2 -x ~/path/to/index_genes/ -1 <read1> -2 <read2> -p 10 \
-S ~/path/to/output/SAM_file.sam --mto --phred33
```

<br>

## Referencias

-   <https://help.basespace.illumina.com/files-used-by-basespace/fastq-files>
-   <https://help.basespace.illumina.com/files-used-by-basespace/fastq-files>
-   [https://hbctraining.github.io/Training-modules/planning_successful_rnaseq/lessons/\
    QC_raw_data.html#:\\\~:text=The%20FASTQ%20file%20format%20is,begins%20with%\
    20a%20header%20line](https://hbctraining.github.io/Training-modules/planning_successful_rnaseq/lessons/QC_raw_data.html#:~:text=The%20FASTQ%20file%20format%20is,begins%20with%20a%20header%20line){.uri}
-   <https://hbctraining.github.io/Intro-to-ChIPseq-flipped/lessons/04_alignment_using_bowtie2.html>
-   <https://daehwankimlab.github.io/hisat2/manual/>
-   <https://hbctraining.github.io/Intro-to-rnaseq-hpc-O2/lessons/03_alignment.html>
